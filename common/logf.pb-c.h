/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: logf.proto */

#ifndef PROTOBUF_C_logf_2eproto__INCLUDED
#define PROTOBUF_C_logf_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _LogMessage LogMessage;


/* --- enums --- */

typedef enum _LogPriority {
  LOG_PRIORITY__TRACE = 1,
  LOG_PRIORITY__DEBUG = 2,
  LOG_PRIORITY__INFO = 3,
  LOG_PRIORITY__WARN = 4,
  LOG_PRIORITY__ERROR = 5,
  LOG_PRIORITY__FATAL = 6,
  LOG_PRIORITY__SILENT = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LOG_PRIORITY)
} LogPriority;

/* --- messages --- */

struct  _LogMessage
{
  ProtobufCMessage base;
  LogPriority prio;
  char *msg;
};
#define LOG_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&log_message__descriptor) \
    , 0, NULL }


/* LogMessage methods */
void   log_message__init
                     (LogMessage         *message);
size_t log_message__get_packed_size
                     (const LogMessage   *message);
size_t log_message__pack
                     (const LogMessage   *message,
                      uint8_t             *out);
size_t log_message__pack_to_buffer
                     (const LogMessage   *message,
                      ProtobufCBuffer     *buffer);
LogMessage *
       log_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   log_message__free_unpacked
                     (LogMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*LogMessage_Closure)
                 (const LogMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    log_priority__descriptor;
extern const ProtobufCMessageDescriptor log_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_logf_2eproto__INCLUDED */
